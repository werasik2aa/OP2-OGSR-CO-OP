local snds = {
	tips_esc_trader_about_anomalies	= [[characters_voice\scenario\trader\trader_tutorial_anomalies_1]],
	gar_dolg_warning				= [[characters_voice\scenario\duty\duty_warning1]],
	esc_return_dv					= [[characters_voice\scenario\trader\return_from_dv]],
	escape_fox_quest				= [[characters_voice\scenario\trader\trader_pda_fox]],
	tip_petruha_report				= [[characters_voice\scenario\escape\petruha_raport_p]],


	tips_agr_krot_sos				= [[characters_voice\scenario\agroprom\krot_help_pda_1]],
	tips_agr_krot_sos1				= [[characters_voice\scenario\agroprom\krot_help_pda_2]],
	tips_agr_krot_sos2				= [[characters_voice\scenario\agroprom\krot_help_pda_2]],
    tips_agr_stalker_help_2			= [[characters_voice\scenario\agroprom\stalker_help_2]],
    tips_agr_stalker_help_1			= [[characters_voice\scenario\agroprom\stalker_help_1]],
	-- ghost_tips					= [[characters_voice\scenario\agroprom\strelok_pda]],
	tips_agr_trader_documents		= [[characters_voice\scenario\agroprom\trader_pda_1]],
    pass_to_1st_door                = [[characters_voice\scenario\val\door1_password]],
    pass_to_2nd_door                = [[characters_voice\scenario\val\door2_password]],


	bar_ecolog_crush_heli_down		= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_1]],
	bar_freedom_attack_attract_actor= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_2]],
	bar_freedom_spam_1				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_6]],
	bar_freedom_spam_2				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_4]],
	bar_freedom_spam_3				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_3]],
	bar_freedom_spam_4				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_5]],
	bar_freedom_attack				= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_7]],
	bar_freedom_attack_spy			= [[characters_voice\scenario\Rostok\Heli_crush\wolfhound_pda_8]],
	bar_ecolog_crush_start_heli		= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_1]],
	bar_ecolog_crush_attract_actor  = [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_2]],
	bar_ecolog_spam_1				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_3]],
	bar_ecolog_spam_2				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_4]],
	bar_ecolog_spam_3				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_5]],
	bar_ecolog_spam_4				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_6]],
	bar_ecolog_attack				= [[characters_voice\scenario\Rostok\Heli_crush\kruglov_pda_7]],
    rostok_kruglov_spam_1			= [[characters_voice\scenario\Rostok\kruglov_pda_help_1]],
    rostok_kruglov_spam_2			= [[characters_voice\scenario\Rostok\kruglov_pda_help_3]],
	bar_ecolog_escape				= [[characters_voice\scenario\Rostok\volkodav_pda_kruglov_escape_1]],
    storyline_vasilyev_tip			= [[characters_voice\scenario\yantar\vasiliev_pda]],
    storyline_ghost_tip 			= [[characters_voice\scenario\yantar\ghost_pda]],
    yan_saharov_message 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_3]],
	yan_saharov_message_2 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_4]],
    yan_saharov_message_3 			= [[characters_voice\scenario\yantar\professor_to_actor_pda_5]],

	yan_scientist_probe				= [[characters_voice\scenario\yantar\kruglov_radiation_quest_13]],
	yan_scientist_probe_1			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_11]],
	yan_scientist_probe_2			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_12]],
	yan_scientist_probe_3			= [[characters_voice\scenario\yantar\kruglov_radiation_quest_6]],

	rostok_kruglov_follow			= [[characters_voice\scenario\Rostok\pda_kruglov_help_6]],
	bar_freedom_chase				= [[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_1]],
	rostok_kruglov_follow_2			= [[characters_voice\scenario\Rostok\pda_kruglov_stop_enemy_2]],
	rostok_kruglov_follow_3			= [[characters_voice\scenario\Rostok\pda_kruglov_help_5]],

	bar_territory_dolg_1_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_1]],
	bar_territory_dolg_2_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_2]],
	bar_territory_dolg_3_hit		= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_3]],
	bar_territory_dolg_kill			= [[characters_voice\scenario\bar\pda\voronin_gunfire_pda_4]],

	tips_bun_komand                 = [[characters_voice\scenario\bun\patrol_prikaz]],

	general_ecolog_tip_1            = [[characters_voice\scenario\yantar\professor_to_actor_pda_1]],
    general_ecolog_tip_2            = [[characters_voice\scenario\yantar\professor_to_actor_pda_2]],


    tips_gar_hellcar_alarm			= [[characters_voice\scenario\garbage\neutrals_commander_pda_1]],
	gar_dolg_blokpost_warning		= [[characters_voice\scenario\duty\duty_warning1]],
	gar_dolg_monster_rush			= [[characters_voice\scenario\duty\duty_request1]],
	gar_direction_fire				= [[characters_voice\scenario\garbage\junkyard_combat_ambush]],
	gar_hellcar_victory				= [[characters_voice\scenario\garbage\junkyard_combat_end]],
	gar_actor_looser				= [[characters_voice\scenario\garbage\duty_after_rush_bad]],
	gar_actor_normal				= [[characters_voice\scenario\garbage\duty_after_rush_normal]],
	gar_actor_winner				= [[characters_voice\scenario\garbage\duty_after_rush_good]],


	esc_direction_fire				= [[characters_voice\scenario\escape\lager_fanat_attack]],
	esc_fanat_victory				= [[characters_voice\scenario\escape\lager_fanat_victory]],

	rad_barman_spam					= [[characters_voice\scenario\radar\rad_barman_message]],


	val_monolith_trader_pda1		= [[characters_voice\scenario\val\trader_dialog1]],
	o_soznanie_text					= [[characters_voice\scenario\sarcofag\o_soznanie_call]],


	-- dublicate pda sounds for remark scheme
    val_rob_leader_jeer_1           = [[characters_voice\scenario\val\rob_leader_jeer_1_p]],
	-- val_rob_leader_call          = [[characters_voice\scenario\val\rob_call_1_p]],

    pri_followers_leader_phrase1_1  = [[characters_voice\scenario\pri\followers_leader_phrase1_1_p]],
    pri_followers_leader_phrase1_2  = [[characters_voice\scenario\pri\followers_leader_phrase1_2_p]],
    pri_followers_leader_phrase1_3  = [[characters_voice\scenario\pri\followers_leader_phrase1_3_p]]
}

local function get_snd(k)
	local t = snds[k]
	-- log3("--[%s] getting sound: [%s]=[%s]", script_name(), k, t)
	if t then return voice(t) end
end

local pda_news = voice([[device\pda\pda_news]])
local pda_tips = voice([[device\pda\pda_tip]])
local pda_task = voice([[device\pda\pda_objective]])

-- При добавлении новых квестовиков добавлять для них иконки в ui_iconstotal и прописывать сюда полное имя, как оно идет в смс. Или прописывать sender в вызов send_tip. Сортировать по алфавиту.
local tips_icons = {
	aaz 		= {249,1128,"ААЗ:","Ааз:"},
	adrenalin 	= {0,1880,"АДРЕНАЛИН:","Адреналин:"},
	akill		= {332,1128,"АКИЛЛ:","Акилл:"},
	akim 		= {166,1081,"АКИМ:","Аким:"},
	alexandrych = {166,1739,"АЛЕКСАНДРЫЧ:","Александрыч:"},
	alfa2012	= {498,1316,"АЛЬФА 2012:","Альфа 2012:"},
	alp			= {332,1175,"АЛЬПИНИСТ:","Альпинист:"},
	andersen	= {498,1363,"АНДЕРСЕН:","Андерсен:"},
	anna		= {0,1269,"АННА:","Анна:"},
	ara 		= {415,423,"АРА:","Ара:"},
	arena    	= {332,141,"АРНИ:","Арни:"},
	arhara 		= {83,1081,"АРХАРА:","Архара:"},
	ariadna 	= {166,1692,"АРИАДНА:","Ариадна:"},
	barman   	= {332,235,"БАРМЕН:","Бармен:"},
	baty 		= {249,1316,"БАТЯ:","Батя:"},
	bes 		= {332,1645,"БЕС:","Бес:"},
	bibliofrend = {0,1175,"ПРАЙМ:","Прайм:"},
	bibliofrend_black = {0,1222},
	bland 		= {166,1598,"БЛЭНД:","Блэнд:"},
	blondy 		= {166,1833,"БЛОНДИНКА:","Блондинка:"},
	bocman 		= {83,1598,"БОЦМАН:","Боцман:"},
	borman 		= {498,1175,"БОРМАН:","Борман:"},
	boroda 		= {0,1598,"БОРОДА:","Борода:"},
	borov 		= {332,564,"БОРОВ:","Боров:"},
	brodaga 	= {0,1504,"БРОДЯГА:","Бродяга:"},
	bubulyka 	= {0,1316,"СТАЛКЕР БУБУЛЮКА:","Сталкер Бубулюка:"},
	buusty		= {83,1410,"БАСТИ:","Басти:"},
	chernomor 	= {166,1316,"ЧЕРНОМОР:","Черномор:"},
	coll	 	= {664,423,"КОЛЛЕКЦИОНЕР:","Коллекционер:"},
	dan 		= {166,987,"ДЭН:","Дэн:"},
	dasha 		= {166,1880,"ДАША:","Даша:"},
	death    	= {0,752},
	default  	= {0,658}, -- по умолчанию
	dezertir	= {332,0,"ДЕЗЕРТИР:","Дезертир:"},
	diak 		= {498,1457,"ДЬЯК:","Дьяк:"},
	dimak 		= {249,1081,"ДИМАК:","Димак:"},
	dmitriev 	= {498,0,"ПРОФЕССОР ДМИТРИЕВ:","Профессор Дмитриев:"},
	docent 		= {415,1739,"ДОЦЕНТ:","Доцент:"},
	doctor 		= {415,846,"ДОКТОР:","Доктор:"},
	doctor_black = {83,1551,"ЧЁРНЫЙ ДОКТОР:","Чёрный Доктор:"},
	dolg     	= {498,141,"ДОЛГ:","Долг:"},
	dolgovazyi	= {415,1786,"ДОЛГОВЯЗЫЙ:","Долговязый:"},
	dragunof	= {249,1833,"ДРАГУНОВ:","Драгунов:"},
	duda 		= {166,1551,"ДУДА:","Дуда:"},
	ecolog   	= {498,0},
	elsa 		= {0,1739,"ЭЛЬЗА:","Эльза:"},
	encyclopedy = {83,846},
	err 		= {913,799}, -- error
	fanat		= {332,1551,"ФАНАТ:","Фанат:"},
	father_pantera = {83,1833,"ОТЕЦ ПАНТЕРЫ:","Отец Пантеры:"},
	fenix 		= {498,1645,"ФЕНИКС:","Феникс:"},
	fenrir 		= {0,1034,"ФЕНРИР:","Фенрир:"},
	filatov		= {498,1692,"КАПИТАН ФИЛАТОВ:","Капитан Филатов:"},
	freedom  	= {498,94,"СВОБОДА:","Свобода:"},
	freeman  	= {498,1034,"ФРИМЕН:","Фримен:"},
	fric 		= {83,1504,"ФРИЦ:","Фриц:"},
	gavr		= {332,1739,"ГАВР:","Гавр:"},
	gen_info 	= {0,658}, -- общая инфа
	gila		= {332,1786,"ЖИЛА:","Жила:"},
	ginekolog 	= {0,1927,"ШУРА ГИНЕКОЛОГ:","Шура Гинеколог:"},
	gologramma 	= {498,1269,"ГОЛОГРАММА:","Голограмма:"},
	grach		= {332,1081,"ГРАЧ:","Грач:"},
	haliava		= {332,1269,"ХАЛЯВА:","Халява:"},
	himera 		= {83,1927,"ХИМЕРА:","Химера:"},
	himik 		= {249,1222,"ХИМИК:","Химик:"},
	holod 		= {83,1974,"ХОЛОДОВ:","Холодов:"},
	iskra 		= {166,1128,"ИСКРА:","Искра:"},
	ivancov		= {332,329,"ИВАНЦОВ:","Иванцов:"},
	kalinin		= {498,1410,"КАЛИНИН:","Калинин:"},
	kalmyk		= {249,1927,"КАЛМЫК:","Калмык:"},
	kartograf  	= {913,235,"КАРТОГРАФ:","Картограф:"},
	kep		  	= {415,1974,"КЭП:","Кэп:"},
	kidalo		= {249,1833,"САНЁК РАЗБОЙНИК:","Санёк Разбойник:"},
	killer   	= {913,940,"НАЁМНИКИ:","Наёмники:"},
	klenov 		= {83,1316,"КЛЁНОВ:","Клёнов:"},
	klyk 		= {83,1034,"КЛЫК:","Клык:"},
	kolmogor 	= {83,1269,"КОЛМОГОР:","Колмогор:"},
	korsar		= {332,1081,"КОРСАР:","Корсар:"},
	korshun		= {498,1739,"КОРШУН:","Коршун:"},
	kostya		= {332,1598,"КОСТЯ:","Костя:"},
	kostylnuga 	= {83,1175,"КОСТЫЛЬНОГА:","Костыльнога:"},
	kot			= {498,1081,"КОТ:","Кот:"},
	kotobegemot = {0,987,"КОТОБЕГЕМОТ:","Котобегемот:"},
	krest		= {498,1504,"КРЕСТ:","Крест:"},
	krisyk		= {332,1692,"КРЫСЮК:","Крысюк:"},
	krot     	= {332,47,"КРОТ:","Крот:"},
	kruger		= {249,1692,"КРЮГЕР:","Крюгер:"},
	kruglov		= {332,1363,"КРУГЛОВ:","Круглов:"},
	kulinar		= {332,1645,"КУЛИНАР:","Кулинар:"},
	kuzmat 		= {166,1927,"КУЗЬКИНА МАТЬ:"},
	kuznecov 	= {332,752,"КУЗНЕЦОВ:","Кузнецов:"},
	lentay		= {249,1645,"ЛЕНТЯЙ:","Лентяй:"},
	lesnik 		= {166,1269,"ЛЕСНИК:","Лесник:"},
	lis 		= {498,1222,"ЛИС:","Лис:"},
	lisiy 		= {415,141,"ЛЫСЫЙ:","Лысый:"},
	lobsang 	= {0,1410,"ЛОБСАНГ:","Лобсанг:"},
	loh 		= {332,611,"СЕРГЕЙ ЛОХМАТЫЙ:","Сергей Лохматый:"},
	lovkach 	= {664,517,"ЛОВКАЧ:","Ловкач:"},
	luber		= {332,1316,"МАКС ЛЮБЕР:","Макс Любер:"},
	lucash 		= {415,235,"ЛУКАШ:","Лукаш:"},
	ludmila		= {0,1692,"ЛЮДМИЛА:","Людмила:"},
	maks		= {332,1410,"МАКС:","Макс:"},
	maksimilian = {166,1175,"МАКСИМИЛИАН:","Максимилиан:"},
	maria 		= {0,1551,"МАРИЯ:","Мария:"},
	masha 		= {166,1833,"МАША:","Маша:"},
	meceniy 	= {913,846,"МЕЧЕНЫЙ:","Меченый:"},
	mercaushy 	= {249,1175,"МЕРЦАЮЩИЙ:","Мерцающий:"},
	molniy 		= {249,1034,"МОЛНИЯ:","Молния:"},
	monolith 	= {913, 893,"МОНОЛИТ:","Монолит:"},
	morozko 	= {249,1410,"МОРОЗКО:","Морозко:"},
	muha 		= {83,1739,"МУХА:","Муха:"},
	nano 		= {913,752}, -- nano_suit
	nazar 		= {249,987,"НАЗАР:","Назар:"},
	noi 		= {498,1598,"НОЙ:","Ной:"},
	norman 		= {166,1457,"НОРМАН:","Норман:"},
	o_soznanie 	= {415,893,"О-СОЗНАНИЕ:","О-Сознание:"},
	obmorok 	= {166,1504,"ОБМОРОК:","Обморок:"},
	op2	 		= {332,987,"КОМАНДА СОЗДАТЕЛЕЙ ОП-2:","Команда создателей ОП-2:"},
	osvedomitel	= {498,987,"ОСВЕДОМИТЕЛЬ:","Осведомитель:"},
	otshelnik 	= {0,1833,"ОТШЕЛЬНИК:","Отшельник:"},
	oz 			= {913,611,"ПРОФЕССОР ОЗЕРСКИЙ:","Профессор Озерский:"},
	pantera 	= {83,1128,"ПАНТЕРА:","Пантера:"},
	parfumer 	= {166,1410,"ПАРФЮМЕР:","Парфюмер:"},
	peregar 	= {498,1551,"ПЕРЕГАР:","Перегар:"},
	petrenko 	= {332,376,"ПЕТРЕНКО:","Петренко:"},
	petrov 		= {166,1457,"СТАЛКЕР ПЕТРОВ:","Сталкер Петров:"},
	petrovich 	= {249,1269,"ПЕТРОВИЧ:","Петрович:"},
	petruha 	= {332,799,"ПЕТРУХА:","Петруха:"},
	piligrim 	= {0,1974,"ПИЛИГРИМ:","Пилигрим:"},
	plichko		= {332,282,"ПЛИЧКО:","Пличко:"},
	potap		= {249,1880,"ПОТАП:","Потап:"},
	povar		= {249,1739,"ПОВАР:","Повар:"},
	prapor		= {332,1880,"ПРАПОР:","Прапор:"},
	prigorshnya = {166,1786,"ПРИГОРШНЯ:","Пригоршня:"},
	prizrak  	= {415,705,"ПРИЗРАК:","Призрак:"},
	proper70 	= {0,1457,"ПРОПЕР СЕМИДЕСЯТЫЙ:","Пропер Семидесятый:"},
	provodnik	= {332,1504,"ПРОВОДНИК:","Проводник:"},
	pula		= {332,1457,"ПУЛЯ:","Пуля:"},
	pulemet		= {332,1081,"САНЬКА ПУЛЕМЁТЧИК:","Санька Пулеметчик:"},
	questman_death = {664,470}, -- смерть квестовика/гг
	radist 		= {166,1222,"РАДИСТ:","Радист:"},
	remind		= {913,423,"НАПОМИНАНИЯ:","Напоминания:"},
	resident_evil = {0,1128,"ОБИТЕЛЬ ЗЛА:","Обитель Зла:"},
	romale		= {166,1974,"РОМА РОМАЛЕ:","Рома Ромале:"},
	saharov  	= {332,470,"САХАРОВ:","Сахаров:"},
	sak			= {415,987,"СЯК:","Сяк:"},
	sapsan 		= {83,1692,"САПСАН:","Сапсан:"},
	sedoy 		= {83,1363,"СЕДОЙ:","Седой:"},
	semeckiy	= {332,1974,"ЮРИЙ СЕМЕЦКИЙ:","Юрий Семецкий:"},
	semenov		= {83,1363,"СЕМЁНОВ:","Семёнов:"},
	shadow_monolit = {83,1880,"ТЕНЬ МОНОЛИТА:","Тень Монолита"},
	shadowman	= {249,1974,"ШЕДОУМЕН:","Шедоумен:"},
	shahter 	= {166,1034,"ШАХТЁР:","Шахтёр:"},
	shax		= {249,1457,"ШАХМАТИСТ:","Шахматист:"},
	sherstuk	= {249,1551,"ШЕРСТЮК:","Шерстюк:"},
	shi3 		= {249,1363,"ШИ3:","Ши3:"},
	shnira		= {332,1692,"ШНЫРА:","Шныра:"},
	shurup		= {332,1222,"ШУРУП:","Шуруп:"},
	sid 		= {249,611,"СИДОРОВИЧ:","Сидорович:"},
	skraga		= {249,1598,"СКРЯГА:","Скряга:"},
	sledopyt	= {332,1034,"СЛЕДОПЫТ:","Следопыт:"},
	snegir 		= {0,1645,"СЛАВИК СНЕГИРЬ:","Славик Снегирь:"},
	solvador 	= {83,1645,"СОЛЬВАДОР:","Сольвадор:"},
	stalker  	= {0,658},
	starik		= {415,1927,"СТАРИК:","Старик:"},
	starogil	= {664,658,"СТАРЫЙ ЖИЛ:","Старый Жил:"},
	str 		= {913,705,"СТРЕЛОК:","Стрелок:"},
	suslov 		= {0,1363,"СУСЛОВ:","Суслов:"},
	sviblov 	= {166,1645,"СВИБЛОВ:","Свиблов:"},
	svyaz	 	= {747,94,"ОПЕРАТОР СВЯЗИ:","Оператор связи:"},
	trade	 	= {0,0}, -- деньги
	trader   	= {332,893}, -- сидорович
	uniq  	 	= {498,47},
	unknown 	= {913,799,"НЕИЗВЕСТНЫЙ СТАЛКЕР:","Неизвестный сталкер:"},
	vasiliy		= {415,1034,"ВАСИЛИЙ:","Василий:"},
	vasya9		= {498,376,"ВАСЯ ДЕВЯТЫЙ:","Вася Девятый:"},
	vesker 		= {0,1786,"ВЕСКЕР:","Вескер:"},
	viking 		= {415,94,"ВИКИНГ:","Викинг:"},
	vitamin 	= {83,1786,"ВИТАМИН:","Витамин:"},
	vol 		= {913,517}, -- волазар первый
	vol_new 	= {913,564,"ВОЛАЗАР:","Волазар:"},
	volkov	 	= {249,1645,"ПРОФЕССОР ВОЛКОВ:","Профессор Волков:"},
	voron 		= {498,1128,"ВОРОН:","Ворон:"},
	voronin 	= {332,423,"ВОРОНИН:","Воронин:"},
	wolf	 	= {332,940,"ВОЛК:","Волк:"},
	wolffrend 	= {0,1081,"ВОЖАК:","Вожак:"},
	yakut		= {332,1927,"ЯКУТ:","Якут:"},
	yurik		= {249,1786,"ЮРИК:","Юрик:"},
	zahar	 	= {415,1880,"ЗАХАР:","Захар:"},
	zashita 	= {664,141,"СИСТЕМА ЗАЩИТЫ:","Система защиты:"},
	zemlyak 	= {83,1457,"ЗЕМЛЯК:","Земляк:"},
	ziklop 		= {83,987,"ЦИКЛОП:","Циклоп:"},
	zlobny 		= {166,1363,"ЗЛОБНЫЙ:","Злобный:"},
    nodata   	= {249,940,"ИСТОЧНИК НЕИЗВЕСТЕН:","Источник неизвестен:"},
    tolik		= {249,1504,"Толик:","Толик:"},
    weaprep 	= {0,517}, -- апгрейд оружия
}

-- Получение иконки отправителя
function get_sender_icon(text, sender)
	if sender == nil or not tips_icons[sender] then
		-- пробуем найти иконку по заголовку СМС
		sender = nil

		for k,v in pairs(tips_icons) do
			if (v[3] and string.find(text, v[3], 1, true)) or (v[4] and string.find(text, v[4], 1, true)) then
				sender = k
				break
			end
		end

		if sender == nil then
			-- не нашли
			sender = "default"
		end
	end

	return tips_icons[sender][1], tips_icons[sender][2]
end

-- cp2ogsr: озвучку останавливаем отдельно от других звуков
local cashe_voice_acting = {}
function stop_prev_sms_sound()
	for k, v in pairs(cashe_voice_acting) do
		if v and v:playing() then
			v:stop()
			-- log3("[%s]: stop_prev_sms_sound(): [%s]", script_name(), tostring(k))
		end
	end
end

function send_tip(actor, news_id, timeout, sender, showtime, sender_id, ozvuchka, stip)

	if type(actor) == "string" then -- Manool: чтобы постоянно не передавать первым аргументом db.actor
		return this.send_tip(db.actor, actor, news_id, timeout, sender, showtime, sender_id, ozvuchka)
	end
	actor = actor or db.actor

	if news_id == nil then return false end

	if sender_id ~= nil then
		-- printf("try to send tips for [%s]", tostring(sender_id))
		local sim = alife()
		if sim ~= nil then
			local npc = sim:story_object(sender_id)
			if npc ~= nil then
				if npc.online then
					-- в онлайне проверяем на раненность
					if xr_wounded.is_heavy_wounded_by_id(npc.id) then
						-- printf("[PDA]Cannot send tips [%s], sender is heavy wounded", tostring(news_id))
						return false
					end
				end
				-- в других случаях только на смерть
				if npc:alive() == 1 then
					-- printf("[PDA]Cannot send tips [%s], sender is dead", tostring(news_id))
					return false
				end
			end
		end
	end

	timeout = timeout or 0
	showtime = showtime or 5000

	local ozvuchka_snd
	if ozvuchka then
		--' играем озвучку
		stop_prev_sms_sound()
		ozvuchka_snd = voice(ozvuchka)
		cashe_voice_acting[ozvuchka] = ozvuchka_snd
		ozvuchka_snd:play(db.actor, timeout, sound_object.s2d)

		--' Необходимо поставить время показа по длине сцены
		local length = ozvuchka_snd:length()
		if length > showtime then
			showtime = length
		end
	else
		--' Играем дефолтный звук
		if stip then pda_tips = voice(stip) end
		pda_tips:play_no_feedback(db.actor, sound_object.s2d, timeout, vector(), 1.0)
		-- pda_tips:play(db.actor, timeout, sound_object.s2d)
		if snds[news_id] ~= nil then
			local tsound = get_snd(news_id)
			--' Играем звук забитый
			tsound:play(db.actor, timeout + 1, sound_object.s2d)

			--' Необходимо поставить время показа по длине сцены
			local length = tsound:length()
			if length > showtime then
				showtime = length
			end
		end
	end

	-- Определяем, ГГ как отправитель по игре уже Cтрелок, или еще Меченый
	if has_info("esc_find_doctor_done") then
		news_id = string.gsub(news_id, translate("actor_name"):upper() .. ":", translate("actor_name2"):upper() .. ":", 1)
		news_id = string.gsub(news_id, translate("actor_name") .. ":", translate("actor_name2") .. ":", 1)
	else
		news_id = string.gsub(news_id, translate("actor_name2"):upper() .. ":", translate("actor_name"):upper() .. ":", 1)
		news_id = string.gsub(news_id, translate("actor_name2") .. ":", translate("actor_name") .. ":", 1)
	end

	local news_text = "%c[255,160,160,160]" .. translate("st_tip") .. "\\n" .. "%c[default]" .. translate(news_id)
	local x, y = get_sender_icon(news_text, sender)
	actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(x, y, 83, 47), timeout * 1000, showtime)
	return ozvuchka_snd or true
end

function send_tip_nosound(actor, news_id, timeout, sender)
	if news_id == nil then return end
	timeout = 0

	--' Играем дефолтный звук
	pda_tips:play(db.actor, timeout, sound_object.s2d)
	return get_snd(news_id)
end

local action_descr_by_type = {
	new = "general_new_task",
	update = "general_update_task",
	complete = "general_complete_task",
	fail = "general_fail_task"
}

local cycle_task = {
	"eliminate_lager",
	"defend_lager",
	"kill_stalker",
	"artefact",
	"monster_part",
	"find_item"
}

local hud
function send_task(actor, type, task, objective)
	-- u3_utils.printf("send_task function started with type: "..type..".")
	if db.actor == nil then return false end

	local task_title = task:get_title()
	local task_time = string.find(task_title, "\\n", 1, true)
	if task_time then task_title = string.sub(task_title, 1, task_time - 1) end
	local skip_autosave = false -- пропуск циклических заданий
	local news_text, task_texture, task_rect
	local objective_index = objective:get_idx() + 1
	
	local ct_type = nil
	local task_id = task:get_id()

	-- Подготовка пакета. 
	local TaskPaket = {}
	TaskPaket.PakType = 1
	TaskPaket.ID = task_id
	TaskPaket.Type = type
	TaskPaket.AutoSave = true -- Противоположность skip_autosave. Проще понять
	TaskPaket.Name = task_title

	for i, v in pairs(cycle_task) do
		if string.find(task_id, v) then
			ct_type = v
			TaskPaket.CType = v
			break
		end
	end

	--' Играем дефолтный звук
	pda_task:play(db.actor, 0, sound_object.s2d)

	-- цвет сообщения
	local text_color = "%c[255,160,160,160]"
	if type == "fail" then text_color = "%c[255,255,0,0]" end

	-- циклическое ли задание?
	if task:is_cycle_task() and ct_type then
		skip_autosave = true
		--' Циклическое задание - берем координаты из текстуры таска
		task_texture, task_rect = get_texture_info("ui_iconsTotal_" .. ct_type, "ui_iconsTotal_stalker10")
		news_text = text_color .. translate(action_descr_by_type[type]) .. "\\n" .. "%c[255,0,255,255]" .. translate(task_title) .. ": %c[255,127,255,255]" .. translate(task:get_objective(1):get_description())
		
		-- Заполняем пакет
		TaskPaket.T_Text = news_text
		TaskPaket.Obj_Index = -1
		TaskPaket.CType = ct_type
		TaskPaket.AutoSave = false
	else
		--' Берем координаты единой текстуры
		task_texture, task_rect = get_texture_info("ui_iconsTotal_stalker10", "ui_iconsTotal_stalker10")
		news_text = text_color .. translate(action_descr_by_type[type]) .. "\\n" .. "%c[255,0,255,255]" .. translate(task_title)
		if type ~= "complete" and type ~= "fail" then
			TaskPaket.Obj_Count = task:get_objectives_cnt()
			if task:get_objectives_cnt() == objective_index then
				objective_index = objective_index - 1
			end

			-- OBJ_INDEX. Какая подзадача выполняется
			TaskPaket.Obj_Index = objective_index

			if type == "new" then
				local obj_desc = task:get_objective(objective_index):get_description()
				if obj_desc ~= nil then
					news_text = news_text .. ": %c[255,127,255,255]" .. translate(obj_desc)
				end
			elseif type == "update" then
				local obj_desc1 = task:get_objective(objective_index - 1):get_description()
				local obj_desc2 = task:get_objective(objective_index):get_description()
				if obj_desc1 ~= nil then
					news_text = news_text .. "\\n" .. "%c[255,127,255,255]Завершено: " .. translate(obj_desc1)
				end
				if obj_desc2 ~= nil then
					news_text = news_text .. "\\n" .. "Следующее: %c[green]" .. translate(obj_desc2)
				end
			end
		end
	
		-- считаем задания
		if type == "update" then
			xr_statistic.add_subtask()
		elseif type == "complete" then
			xr_statistic.add_subtask()
			xr_statistic.add_task()
		end
	end

	-- Снизу слева в углу. Сообщение о задании. Поправил - Morealis
	TaskPaket.MSG = news_text

	if db.actor:is_talking() then db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item") end
	--выдаем в любом случае чтобы попало в дневник
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 30000)

	if type == "new" or type == "update" then
		--' Выдать новое подзадание
		if task:get_objectives_cnt() == objective_index then return end
		news_text = translate(task:get_objective(objective_index):get_description())
	else
		news_text = text_color .. translate(action_descr_by_type[type]) .. "\\n" .. "%c[255,0,255,255]" .. translate(task_title)
	end

	-- Сверху надпись. Вот так
	TaskPaket.Label = news_text

	-- автосохранение только при получении и сдаче задания. циклические задания игнорируются.
	if not skip_autosave then
		local news_text_save = translate(task_title)
		if type == "complete" then
			news_text_save = news_text_save .. " - завершено"
		end

		TaskPaket.SaveText = news_text_save

		-- удаляем предыдущий таймер на сохранение при сдаче/получении нескольких квестов в одном диалоге
		-- сохраняем только самый последний автосейв по завершении диалога
		if type == "new" or type == "complete" then
			amk.remove_timer("autosave")
			amk.start_timer("autosave", 3, "[CLIENT]"..news_text_save)
		end
	end

	if not hud then hud = get_hud() end
	hud:AddCustomStatic("main_task", true)
	hud:GetCustomStatic("main_task"):wnd():SetTextST(news_text)
	hud:GetCustomStatic("main_task").m_endTime = time_global() / 1000 + 7
	TaskPaket.T_Text = news_text
	-- Сохранняем данные задания. И отправляем его
	MServer.QuestsData[TaskPaket.ID] = TaskPaket
	MClientOnEvents.OnIQuestUpdate(TaskPaket)
end

function send_encyclopedy(npc, group, name, _type)
	if not (name and group) then return end
	amk.send_tip(translate(name), "%c[255,255,255,0]" .. translate(group), nil, 7, "encyclopedy")
end

function send_treasure(name)
	local level_name = {
		["esc"] = "Кордон",
		["gar"] = "Свалка",
		["agr"] = "Агропром",
		["agr_u"] = "Подземелье Агропрома",
		["val"] = "Тёмная Долина",
		["mil"] = "Армейские Склады",
		["yan"] = "Янтарь",
		["x16"] = "Лаборатория Х-16",
		["rad"] = "Радар",
		["pri"] = "Центральная Припять",
		["x18"] = "Лаборатория Х-18",
		["bar"] = "Бар",
		["ros"] = "Дикая Территория",
		["pesh"] = "Пещера",
		["dead_city"] = "Мёртвый Город",
		["generators_arhara"] = "Генераторы",
		["aver_arhara"] = "Неразведанная Земля",
		["warlab_arhara"] = "Варлаб",
		["village"] = "Старая Деревня",
		["atp_arhara"] = "АТП",
		["marsh"] = "Болота",
		["limansk"] = "Лиманск",
		["red_forest"] = "Красный Лес",
		["hos"] = "Госпиталь",
		["jund"] = 'Путепровод "Припять-1"',
		["labx8"] = "Лаборатория Х-8",
		["bum"] = "Управление Монолитом",
		["zl"] = "Забытый Лес",
		["lab"] = "Лабиринт",
		["sar"] = "Саркофаг",
		["x10"] = "Лаборатория Х-10",
		["vp"] = "Восточная Припять",
		["zat"] = "Затон",
		["jup"] = "Юпитер"
	}
	pda_news:play(db.actor, 0, sound_object.s2d)
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_abstract5")
	local level_key = string.sub(name, 1, string.find(name, "_s", 1, plain) - 1)
	local tmp_str = ""
	if level_name[level_key] ~= nil then tmp_str = level_name[level_key] .. ": " end
	local news_text = "%c[255,160,160,160]" .. translate("st_found_new_treasure") .. "\\n" .. "%c[120,255,120,160]" .. tmp_str .. "%c[170,200,200,200]" .. translate(name)
	db.actor:give_game_news(news_text, task_texture, task_rect, 0, 20000)
end

function gett_inv_name(s)
	if sys_ini:line_exist(s, "inv_name") then
		return translate(sys_ini:r_string(s, "inv_name"))
	end
	return s
end

function get_inv_name(s)
	if sys_ini:line_exist(s, "inv_name") then
		return sys_ini:r_string(s, "inv_name")
	end
	return s
end

function get_inv_name_short(s)
	if sys_ini:line_exist(s, "inv_name_short") then
		return sys_ini:r_string(s, "inv_name_short")
	end
	return s
end

function relocate_item( actor, type, item, num )
  return relocate_item_ex( type, item, num )
end


function get_talk_item_icon( sect )
  local icon = CIconParams( sect )
  local texture, rect
  if icon.icon_name then
    texture, rect = get_texture_info( icon.icon_name )
  else
    texture = dsh.get_ui_icon_equipment_name( sect )
    rect    = icon:original_rect()
    rect.x2 = rect.x2 - rect.x1
    rect.y2 = rect.y2 - rect.y1
  end
	return {texture, rect, ("ico_item_" .. icon.grid_width .. "_" .. icon.grid_height)}
end


function relocate_item_ex( type, item, num, news_text )
	local inm = gett_inv_name(item)
	num = num or 1
	local item_name = string.format("%%c[255,255,215,0]x%s %%c[default]%s", num, inm)
  if ammo_section( item ) then	-- cp2ogsr: количество патронов тоже отобразить
		local box = num * get_u32(item, "box_size", 1)
    if box > 1 then
			item_name = string.format("%%c[255,255,215,0]x%s%%c[255,255,140,0] [x%.0f]%%c[default] %s", num, box, inm)
    end
  end
	local ic = get_talk_item_icon(item)
  if type == "in" then
    if not news_text then
			news_text = "%c[255,105,239,146]" .. translate("general_in_item") .. "\\n%c[default]" .. item_name
    end
    if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, unpack(ic))
    else
			local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_thing")
      db.actor:give_game_news( news_text, task_texture, task_rect, 0, 2000 )
    end
  elseif type == "out" then
    if not news_text then
			news_text = "%c[255,255,085,085]" .. translate("general_out_item") .. "\\n%c[default]" .. item_name
    end
    if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, unpack(ic))
    else
			local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_thing")
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
    end
  end
end

function relocate_money(actor, type, amount)
	if db.actor == nil then return false end

	--' Играем дефолтный звук
	if type == "in" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_money")
		local news_text = "%c[255,105,239,146]" .. translate("general_in_money") .. "\\n" .. "%c[default]" .. translate(tostring(amount))
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
		end
	elseif type == "out" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
		local news_text = "%c[255,255,085,085]" .. translate("general_out_money") .. "\\n" .. "%c[default]" .. translate(tostring(amount))
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 5000)
		end
	end
end
